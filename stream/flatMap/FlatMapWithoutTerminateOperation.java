package stream.flatMap;
import java.util.stream.*;
import java.util.*;

/**
   Which of the following are true? (Choose all that apply.)

    A. Zero lines are generated by the line marked by peek 1.
    B. Two lines are generated by the line marked by peek 1.
    C. Three lines are generated by the line marked by peek 1.
    D. Zero lines are generated by the line marked by peek 2.
    E. Two lines are generated by the line marked by peek 2.
    F. Three lines are generated by the line marked by peek 2.
    G. The code does not compile.
    H. The code throws an exception.

     What’s the terminal operation? There isn’t one.
     That means that the intermediate operations, including both peek() statements, never run.
     Options A and D are correct because no output is produced.

 */
public class FlatMapWithoutTerminateOperation {
    /**
     *
     */
    static void withoutTerminateOperation(){
        List<Integer> x1 = Arrays.asList();
        List<Integer> x2 = Arrays.asList(1, 2, 3);
        List<Integer> x3 = Arrays.asList(4, 5, 6);

        Stream.of(x1, x2, x3)
               .limit(2)
               .peek(System.out::println) // peek 1
               .flatMap(x -> x.stream())
               .peek(System.out::println) // peek 2
               .map(x -> x + 1);

    }

}