package db;
import java.sql.*;

/**
   What statements about the following method are correct? (Choose three.)
    A. It protects against a denial of service attack.
    B. It does not protect against denial of service attacks.
    C. It protects against SQL injection.
    D. It does not protect against SQL injection because it does not use a PreparedStatement.
    E. Even if the method completes without throwing an exception, a resource leak might occur.
    F. If the method completes without throwing an exception, then no resource leak can occur.

    While it is permitted to declare a resource outside a try-with-resources statement
    and still have it be protected, declaring two is not recommended.
    In particular, if con.createStatement() fails,
    then the Connection is not closed. For this reason,
    the code is susceptible to denial of service attacks, making option B correct.
    While it does not use a PreparedStatement, the code is safe from SQL injection because
    the query does not take any parameters, making option C correct.
    Finally,if the method completes without throwing an exception,
    then that means the try-with-resources block was successfully entered.
    In this case, all resources would have been closed properly making option F correct.
 */
public class CheckAlarmFindExploit {
    public String checkAlarm(String connectionStr, boolean alarmed)
      throws SQLException {
        var query = "SELECT * FROM office WHERE alarmed = true";
        var con = DriverManager.getConnection(connectionStr);
        var stmt = con.createStatement();
        try (con;
            stmt;
            var rs = stmt.executeQuery(query)) {
                        return rs.next() ? rs.getString("address") : null;
        }}
}