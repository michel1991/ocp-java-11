package db.exploit;
import java.sql.*;

/**
    Which statement best describes the following method?
    A. It is not susceptible to any common attacks.
    B. It is at risk of SQL injection attack only.
    C. It is at risk of a denial of service attack only.
    D. It is at risk of both SQL injection and denial of service attacks.
    E. The method does not compile.
    F. None of the above.
    
    The method compiles, so option E is incorrect. It is recommended to use a PreparedStatement with bind variables,
    over a Statement, to avoid SQL injection. Since the data type of the variable is String,
    it needs to be escaped making this method at risk for SQL injection.
    Further, there is no risk of a resource leak that could be exploited in a denial of service attack.
    The Connection object is declared immediately before the try-with-resources block and closed by it,
    so it cannot be left open. For these reasons, option B is correct.


 */
public class FindNewLego {
    public String findNewLego(String url, String type)
      throws SQLException {
        var query = "SELECT name FROM sets WHERE "
                    + "type = " + type + " ORDER BY date DESC";
        var con = DriverManager.getConnection(url);
        try(con;
      var ps = con.createStatement();
      var rs = ps.executeQuery(query)) {

            if(rs.next()) return rs.getString(1);
        }
        throw new RuntimeException("None available, try  later");
    }
}